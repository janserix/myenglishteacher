import os
import openai
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π AI-—Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º üòä")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text

    # –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ ChatGPT
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",  # –∏–ª–∏ gpt-4 –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø
        messages=[{"role": "user", "content": user_message}]
    )

    bot_reply = response.choices[0].message.content
    await update.message.reply_text(bot_reply)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()


